{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppNavbar = _resolveComponent(\"AppNavbar\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  const _component_AppFooter = _resolveComponent(\"AppFooter\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$options.showNavbar ? (_openBlock(), _createBlock(_component_AppNavbar, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_router_view), $options.showFooter ? (_openBlock(), _createBlock(_component_AppFooter, {\n    key: 1\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","$options","showNavbar","_createBlock","_component_AppNavbar","key","_createCommentVNode","_createVNode","_component_router_view","showFooter","_component_AppFooter"],"sources":["C:\\lms\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <AppNavbar v-if=\"showNavbar\" />\n    <router-view />\n    <AppFooter v-if=\"showFooter\" />\n  </div>\n</template>\n\n<script>\nimport AppNavbar from './components/AppNavbar.vue';\nimport AppFooter from './components/AppFooter.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    AppNavbar,\n    AppFooter,\n  },\n  mounted() {\n   \n    // Aplica o tema baseado no localStorage ou prefereências do sistema\n    const darkMode =\n      JSON.parse(localStorage.getItem('darkMode')) ||\n      window.matchMedia('(prefers-color-scheme: dark)').matches;\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  },\n  computed: {\n    showNavbar() {\n      return !this.$route.meta.hideLayout;\n    },\n    showFooter() {\n      return !this.$route.meta.hideLayout;\n    },\n  },\n};\n\n\n\n</script>\n\n<style>\n/* Adicione estilos globais, se necessário */\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;;;uBAAbC,mBAAA,CAIM,OAJNC,UAIM,GAHaC,QAAA,CAAAC,UAAU,I,cAA3BC,YAAA,CAA+BC,oBAAA;IAFnCC,GAAA;EAAA,MAAAC,mBAAA,gBAGIC,YAAA,CAAeC,sBAAA,GACEP,QAAA,CAAAQ,UAAU,I,cAA3BN,YAAA,CAA+BO,oBAAA;IAJnCL,GAAA;EAAA,MAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}