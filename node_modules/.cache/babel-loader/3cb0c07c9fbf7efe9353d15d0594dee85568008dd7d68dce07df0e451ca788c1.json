{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"flex flex-col items-center justify-center min-h-screen bg-gray-900\"\n};\nconst _hoisted_2 = {\n  class: \"w-[90%] max-w-md p-8 bg-gray-800 rounded-lg shadow-md\"\n};\nconst _hoisted_3 = {\n  class: \"mt-4\"\n};\nconst _hoisted_4 = {\n  class: \"mt-4 text-center text-sm text-gray-400\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", {\n    class: \"text-2xl font-semibold text-center text-gray-300\"\n  }, \"Login\", -1)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.handleLogin && $options.handleLogin(...args), [\"prevent\"])),\n    class: \"mt-6\"\n  }, [_createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    class: \"block text-sm text-gray-400\",\n    for: \"email\"\n  }, \"Email\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    type: \"email\",\n    id: \"email\",\n    class: \"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n    placeholder: \"seuemail@gmail.com\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    class: \"block text-sm text-gray-400\",\n    for: \"password\"\n  }, \"Senha\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    type: \"password\",\n    id: \"password\",\n    class: \"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n    placeholder: \"********\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.password]])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"w-full mt-6 py-2 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition duration-200\"\n  }, \" Entrar \", -1))], 32), _createElementVNode(\"p\", _hoisted_4, [_cache[7] || (_cache[7] = _createTextVNode(\" Não tem uma conta? \")), _createVNode(_component_router_link, {\n    to: \"/register\",\n    class: \"text-blue-500 hover:underline\"\n  }, {\n    default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\"Cadastre-se\")])),\n    _: 1\n  })])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","handleLogin","for","$event","$data","email","type","id","placeholder","required","_hoisted_3","password","_hoisted_4","_createTextVNode","_createVNode","_component_router_link","to","default","_withCtx","_"],"sources":["C:\\lms\\src\\views\\UserLogin.vue"],"sourcesContent":["<template>\n  <div\n    class=\"flex flex-col items-center justify-center min-h-screen bg-gray-900\"\n  >\n    <div class=\"w-[90%] max-w-md p-8 bg-gray-800 rounded-lg shadow-md\">\n      <h2 class=\"text-2xl font-semibold text-center text-gray-300\">Login</h2>\n      <form @submit.prevent=\"handleLogin\" class=\"mt-6\">\n        <div>\n          <label class=\"block text-sm text-gray-400\" for=\"email\">Email</label>\n          <input\n            v-model=\"email\"\n            type=\"email\"\n            id=\"email\"\n            class=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"seuemail@gmail.com\"\n            required\n          />\n        </div>\n        <div class=\"mt-4\">\n          <label class=\"block text-sm text-gray-400\" for=\"password\"\n            >Senha</label\n          >\n          <input\n            v-model=\"password\"\n            type=\"password\"\n            id=\"password\"\n            class=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"********\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          class=\"w-full mt-6 py-2 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition duration-200\"\n        >\n          Entrar\n        </button>\n      </form>\n      <p class=\"mt-4 text-center text-sm text-gray-400\">\n        Não tem uma conta?\n        <router-link to=\"/register\" class=\"text-blue-500 hover:underline\"\n          >Cadastre-se</router-link\n        >\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n    };\n  },\n  methods: {\n    ...mapActions(['login']),\n    async handleLogin() {\n      try {\n        const response = await fetch('/data/users.json'); // Certifique-se de que o caminho está correto\n        const users = await response.json();\n\n        const authenticatedUser = users.find(\n          (user) => user.email === this.email && user.password === this.password\n        );\n\n        if (authenticatedUser) {\n          this.login(authenticatedUser); // Chama a action para salvar o usuário logado no Vuex{ email: this.email }); // Salva no Vuex\n          if (authenticatedUser.role === 'admin') {\n            this.$router.push('/admin');\n          } else {\n            this.$router.push('/areadoaluno'); // Chama a action para salvar o usuário\n          }\n        } else {\n          alert('Credenciais inválidas. Tente novamente.');\n        }\n      } catch (error) {\n        console.error('Erro ao buscar os usuários:', error);\n        alert('Ocorreu um erro. Tente novamente mais tarde.');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Personalize conforme necessário */\n</style>\n"],"mappings":";;EAEIA,KAAK,EAAC;AAAoE;;EAErEA,KAAK,EAAC;AAAuD;;EAczDA,KAAK,EAAC;AAAM;;EAoBhBA,KAAK,EAAC;AAAwC;;;uBArCrDC,mBAAA,CA4CM,OA5CNC,UA4CM,GAzCJC,mBAAA,CAwCM,OAxCNC,UAwCM,G,0BAvCJD,mBAAA,CAAuE;IAAnEH,KAAK,EAAC;EAAkD,GAAC,OAAK,QAClEG,mBAAA,CA+BO;IA/BAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MANnBC,cAAA,KAAAC,IAAA,KAM6BC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAER,KAAK,EAAC;MACxCG,mBAAA,CAUM,c,0BATJA,mBAAA,CAAoE;IAA7DH,KAAK,EAAC,6BAA6B;IAACW,GAAG,EAAC;KAAQ,OAAK,Q,gBAC5DR,mBAAA,CAOE;IAhBZ,uBAAAG,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAUqBC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IACdG,IAAI,EAAC,OAAO;IACZC,EAAE,EAAC,OAAO;IACVhB,KAAK,EAAC,6FAA6F;IACnGiB,WAAW,EAAC,oBAAoB;IAChCC,QAAQ,EAAR;gCALSL,KAAA,CAAAC,KAAK,E,KAQlBX,mBAAA,CAYM,OAZNgB,UAYM,G,0BAXJhB,mBAAA,CAEC;IAFMH,KAAK,EAAC,6BAA6B;IAACW,GAAG,EAAC;KAC5C,OAAK,Q,gBAERR,mBAAA,CAOE;IA7BZ,uBAAAG,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAuBqBC,KAAA,CAAAO,QAAQ,GAAAR,MAAA;IACjBG,IAAI,EAAC,UAAU;IACfC,EAAE,EAAC,UAAU;IACbhB,KAAK,EAAC,6FAA6F;IACnGiB,WAAW,EAAC,UAAU;IACtBC,QAAQ,EAAR;gCALSL,KAAA,CAAAO,QAAQ,E,+BAQrBjB,mBAAA,CAKS;IAJPY,IAAI,EAAC,QAAQ;IACbf,KAAK,EAAC;KACP,UAED,O,OAEFG,mBAAA,CAKI,KALJkB,UAKI,G,0BA3CVC,gBAAA,CAsCwD,sBAEhD,IAAAC,YAAA,CAECC,sBAAA;IAFYC,EAAE,EAAC,WAAW;IAACzB,KAAK,EAAC;;IAxC1C0B,OAAA,EAAAC,QAAA,CAyCW,MAAWrB,MAAA,QAAAA,MAAA,OAzCtBgB,gBAAA,CAyCW,aAAW,E;IAzCtBM,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}