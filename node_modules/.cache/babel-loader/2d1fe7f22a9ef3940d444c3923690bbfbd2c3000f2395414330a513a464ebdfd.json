{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    ...mapActions(['login']),\n    async handleLogin() {\n      try {\n        const response = await fetch('/data/users.json'); // Certifique-se de que o caminho está correto\n        const users = await response.json();\n        const authenticatedUser = users.find(user => user.email === this.email && user.password === this.password);\n        if (authenticatedUser) {\n          this.login(authenticatedUser); // Chama a action para salvar o usuário logado no Vuex{ email: this.email }); // Salva no Vuex\n          if (authenticatedUser.role === 'admin') {\n            this.$router.push('/admin');\n          } else {\n            this.$router.push('/areadoaluno'); // Chama a action para salvar o usuário\n          }\n        } else {\n          alert('Credenciais inválidas. Tente novamente.');\n        }\n      } catch (error) {\n        console.error('Erro ao buscar os usuários:', error);\n        alert('Ocorreu um erro. Tente novamente mais tarde.');\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","email","password","methods","handleLogin","response","fetch","users","json","authenticatedUser","find","user","login","role","$router","push","alert","error","console"],"sources":["C:\\lms\\src\\views\\UserLogin.vue"],"sourcesContent":["<template>\n  <div\n    class=\"flex flex-col items-center justify-center min-h-screen bg-gray-900\"\n  >\n    <div class=\"w-[90%] max-w-md p-8 bg-gray-800 rounded-lg shadow-md\">\n      <h2 class=\"text-2xl font-semibold text-center text-gray-300\">Login</h2>\n      <form @submit.prevent=\"handleLogin\" class=\"mt-6\">\n        <div>\n          <label class=\"block text-sm text-gray-400\" for=\"email\">Email</label>\n          <input\n            v-model=\"email\"\n            type=\"email\"\n            id=\"email\"\n            class=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"seuemail@gmail.com\"\n            required\n          />\n        </div>\n        <div class=\"mt-4\">\n          <label class=\"block text-sm text-gray-400\" for=\"password\"\n            >Senha</label\n          >\n          <input\n            v-model=\"password\"\n            type=\"password\"\n            id=\"password\"\n            class=\"w-full px-4 py-2 mt-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            placeholder=\"********\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          class=\"w-full mt-6 py-2 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition duration-200\"\n        >\n          Entrar\n        </button>\n      </form>\n      <p class=\"mt-4 text-center text-sm text-gray-400\">\n        Não tem uma conta?\n        <router-link to=\"/register\" class=\"text-blue-500 hover:underline\"\n          >Cadastre-se</router-link\n        >\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      email: '',\n      password: '',\n    };\n  },\n  methods: {\n    ...mapActions(['login']),\n    async handleLogin() {\n      try {\n        const response = await fetch('/data/users.json'); // Certifique-se de que o caminho está correto\n        const users = await response.json();\n\n        const authenticatedUser = users.find(\n          (user) => user.email === this.email && user.password === this.password\n        );\n\n        if (authenticatedUser) {\n          this.login(authenticatedUser); // Chama a action para salvar o usuário logado no Vuex{ email: this.email }); // Salva no Vuex\n          if (authenticatedUser.role === 'admin') {\n            this.$router.push('/admin');\n          } else {\n            this.$router.push('/areadoaluno'); // Chama a action para salvar o usuário\n          }\n        } else {\n          alert('Credenciais inválidas. Tente novamente.');\n        }\n      } catch (error) {\n        console.error('Erro ao buscar os usuários:', error);\n        alert('Ocorreu um erro. Tente novamente mais tarde.');\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Personalize conforme necessário */\n</style>\n"],"mappings":";;;AAiDA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGL,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;IACxB,MAAMM,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,kBAAkB,CAAC,EAAE;QAClD,MAAMC,KAAI,GAAI,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAEnC,MAAMC,iBAAgB,GAAIF,KAAK,CAACG,IAAI,CACjCC,IAAI,IAAKA,IAAI,CAACV,KAAI,KAAM,IAAI,CAACA,KAAI,IAAKU,IAAI,CAACT,QAAO,KAAM,IAAI,CAACA,QAChE,CAAC;QAED,IAAIO,iBAAiB,EAAE;UACrB,IAAI,CAACG,KAAK,CAACH,iBAAiB,CAAC,EAAE;UAC/B,IAAIA,iBAAiB,CAACI,IAAG,KAAM,OAAO,EAAE;YACtC,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;UAC7B,OAAO;YACL,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,EAAE;UACrC;QACF,OAAO;UACLC,KAAK,CAAC,yCAAyC,CAAC;QAClD;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDD,KAAK,CAAC,8CAA8C,CAAC;MACvD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}